<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="contact">
	<insert id="save" parameterType="ContactDTO">
	INSERT INTO t_contact(phoneNumber, spName, createTime, status, areaId, description, tagName) 
	VALUE (#{phoneNumber}, #{spName}, now(), #{status}, #{areaId}, #{description}, #{tagName}) 
	</insert>
  	
  	<select id="getByPhoneNumber" parameterType="String" resultType="Long" >
		select id from t_contact where phoneNumber = #{phone} and status != -1
	</select>
	
	<select id="getBySendSubtaskId" parameterType="Long" resultType="String" >
		select distinct c.phoneNumber from 
		t_contact c inner join t_send_subtask_contact s on c.id = s.contactId
		where s.subtaskId = #{subtaskId} and c.status != -1
	</select>
	
	<select id="getExistingProvinceList" parameterType="Map" resultType="AreaDTO" >
		select aa.id, aa.fullName name from area aa where aa.code in 
		<foreach collection="areaCodeList" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
	</select>
	
	<select id="getExistingProvinceCode" resultType="String" >
		select distinct CONCAT(substr(a.code, 1, 2), '0000') 
		from t_contact c inner join area a on c.areaId = a.id where c.status != -1
	</select>
  	
  	<select id="getSpNameList" resultType="String" >
		select distinct c.spName from t_contact c where c.status != -1
	</select>
	
	<select id="getTagNameList" resultType="String" >
		select distinct c.tagName from t_contact c where c.status != -1
	</select>
	
	<update id="updateRepeatTimes" parameterType="Map" >
		update t_contact c 
		set c.repeatTimes = c.repeatTimes + 1, c.description = concat(c.description, #{description}) 
		where c.id = #{contactId}
	</update>
	
	<sql id = "getContactCondition">
		from t_contact c where c.status != -1
		<if test="searchDto.areaId != null">
			<if test="searchDto.areaId == -1">
				and c.areaId is null
			</if>
			<if test="searchDto.areaId != -1">
				and c.areaId in 
				(select id from area where code like (select concat(trim(TRAILING '00' FROM code), '%') 
				from area where id = #{searchDto.areaId}))
			</if>
		</if>
		<if test="searchDto.spName != null and searchDto.spName != ''">
			and c.spName = #{searchDto.spName}
		</if>
		<if test="searchDto.tagName != null and searchDto.tagName != ''">
			and c.tagName = #{searchDto.tagName}
		</if>
	</sql>
	
	<select id="getContactTotalNum" parameterType="Map" resultType="Long">
		select count(c.id)
		<include refid="getContactCondition" />
	</select>

	<select id="getContactList" parameterType="Map" resultType="ContactDTO" >
		select c.id, c.phoneNumber, c.createTime, (select a.fullName from area a where a.id = c.areaId)areaName, c.spName,
		c.repeatTimes, c.tagName
		<include refid="getContactCondition" />
		order by c.repeatTimes desc, c.areaId, c.createTime desc
		limit ${(p.pageNum - 1) * p.numPerPage}, ${p.numPerPage}
	</select>
	
	<select id="getContactIdList" parameterType="Map" resultType="Long" >
		select c.id
		<include refid="getContactCondition" />
	</select>
	
	<select id="getContactListWithoutAreaId" parameterType="Integer" resultType="ContactDTO" >
		select c.id, c.phoneNumber
		from t_contact c where c.status != -1 and c.areaId is null
		order by rand()
		limit #{maxNum}
	</select>
	
	<update id="updateArea" parameterType="ContactDTO" >
		update t_contact c 
		set c.areaId = #{areaId}, c.spName = #{spName}
		where c.id = #{id}
	</update>
</mapper>